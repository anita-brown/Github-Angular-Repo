REACT_APP_GITHUB_URL = 'https://api.github.com'
REACT_APP_GITHUB_TOKEN = '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'



# import React, { useEffect, useMemo } from 'react';
# import uniqBy from 'lodash/uniqBy';
# import orderBy from 'lodash/orderBy';
# import './App.css';
# interface GitHubRepo {
#   id: number;
#   full_name: string;
#   contributors_url: string;
# }
# interface GitHubRepoContributor {
#   id: number;
#   url: string;
#   login: string;
#   avatar_url: string;
#   contributions: number;
# }
# interface GitHubUser extends GitHubRepoContributor {
#   followers: number;
#   following: number;
#   public_repos: number;
#   public_gists: number;
# }
# function fetchAllContributorsToRepos(login: string): Promise<GitHubUser[][]> {
#   const orgURL = `https://api.github.com/orgs/${login}/repos`;
#   const authToken = `token ${process.env.REACT_APP_GITHUB_TOKEN}`;
#   return fetch(orgURL, {
#     headers: {
#       Authorization: authToken,
#     },
#   })
#     .then((res) => res.json())
#     .then((repos: GitHubRepo[]) => {
#       return Promise.all(
#         repos.map((repo) => {
#           const url = `https://api.github.com/repos/${repo.full_name}/contributors`;
#           return fetch(url, {
#             headers: {
#               Authorization: authToken,
#             },
#           })
#             .then((res) => res.json())
#             .then((contributors: GitHubRepoContributor[]) => {
#               return Promise.all(
#                 contributors.map((contributor) => {
#                   return fetch(contributor.url, {
#                     headers: {
#                       Authorization: authToken,
#                     },
#                   })
#                     .then((res) => res.json())
#                     .then((contributor) => {
#                       return {
#                         ...contributor,
#                         contributions: contributor.contributions,
#                       };
#                     });
#                 })
#               );
#             });
#         })
#       );
#     });
# }
# function App() {
#   const [contributors, setContributors] = React.useState<GitHubUser[]>([]);
#   const [sortCriteria, setSortCriteria] =
#     React.useState<string>('contributions');
#   useEffect(() => {
#     fetchAllContributorsToRepos('angular').then((contributors) => {
#       // Only unique contributors
#       setContributors(uniqBy(contributors.flat(), 'login'));
#     });
#   }, []);
#   const users = useMemo(
#     () =>
#       orderBy(contributors, sortCriteria, ['desc']).map((user) => {
#         return (
#           <li key={user.id}>
#             <img src={user.avatar_url} alt={user.login} />
#             <p>{user.login}</p>
#           </li>
#         );
#       }),
#     [sortCriteria, contributors.length]
#   );
#   if (contributors.length === 0) {
#     return <p>Loading...</p>;
#   }
#   return (
#     <div className="App">
#       <button
#         onClick={() => setSortCriteria('contributors')}
#         disabled={sortCriteria === 'contributors'}
#       >
#         Sort By Contributions
#       </button>
#       <button
#         onClick={() => setSortCriteria('followers')}
#         disabled={sortCriteria === 'followers'}
#       >
#         Sort By FollowerCount
#       </button>
#       <h1>Angular Contributors</h1>
#       <ul>{users}</ul>
#     </div>
#   );
# }
# export default App;







    
#         return (
#             <section id="contributors">
#             <div className='contribution-header'>
#                 <h1 className='header'>Contributors</h1>
#                 <div>

#                     <div className='dropdown-header'>
#                         <input className='search-header' placeholder='search...' type="text" id="" />
#                         <button className='btn-search'>Search</button>
#                         <div className="dropdown">
#                             <button className="dropbtn">Filter</button>
#                             <div className="dropdown-content">
#                                 <a href="//">Highest Contributions</a>
#                                 <a href="//">Highest followers</a>
#                                 <a href="//">Public repos</a>
#                                 <a href="//">Gists published</a>
#                             </div>
#                         </div>
#                     </div>
#                 </div>

#             </div>